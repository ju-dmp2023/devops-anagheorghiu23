# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Use the Docker Login action
      - name: Login to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: judevops.azurecr.io
          username: DevOpsToken
          password: ${{ secrets.DOCKER_PASSWORD_REGISTRY }}
   
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
           pip install -r assignment_1_calculator/BE/requirements.txt
          pip install pytest
          pip install requests
          pip install assertpy
          pip install httpx
          pip install playwright
          playwright install

      - name: updating PYTHONPATH
        run: echo "PYTHONPATH=assignment_1_calculator" >> $GITHUB_ENV
        shell: bash
   # Runs the pytest
      -   name: Testing the code - unit and api
          run: |
            echo $PYTHONPATH
            docker compose -p webcalculator up -d assignment_1_calculator/
            pytest
            pytest --junit-xml=report.xml
      -   name: Publish Test Report
          uses: mikepenz/action-junit-report@v5
          with:
                report_paths: 'report.xml'

      # -   name: Killing the server
      #     run: |
      #       echo %PYTHONPATH%
      #       pytest --junit-xml=report.xml.
      #       pkill -f 'calculator.py --rest'
     
      # Runs a set of commands using the runners shell
      -   name: Pipeline-update
          if: success()
          run: |
            docker build -t judevops.azurecr.io/ana-gheorghiu-calculator ./assignment_1_calculator/BE
            docker push judevops.azurecr.io/ana-gheorghiu-calculator
